name:                satisfaction-core
version:             0.1.0.0
synopsis:            Solvers for satisfiability and related problems
description:         Satisfaction is a reasonably modern and efficient implementation of a DPLL/CDCL
                     SAT solver.  The public interface is in the Satisfaction module.  The rest of
                     the implementation (including internal data structures) is exposed, but guaranteed
                     to be an unstable interface.
license:             BSD3
license-file:        LICENSE
author:              Tristan Ravitch
maintainer:          tristan@nochair.net
category:            Constraints
build-type:          Simple
cabal-version:       >=1.10
tested-with: GHC == 7.8.4, GHC == 7.10.3

flag trace
  description: Enable debug tracing
  default: False

library
  exposed-modules: Satisfaction
                   Satisfaction.Formula
                   Satisfaction.Formula.Internal
                   Satisfaction.Formula.Literal
                   Satisfaction.Formula.Tseitin
                   Satisfaction.CDCL
                   Satisfaction.CDCL.AnalyzeConflict
                   Satisfaction.CDCL.Clause
                   Satisfaction.CDCL.Constraint
                   Satisfaction.CDCL.Constraint.Clause
                   Satisfaction.CDCL.Constraint.Equality
                   Satisfaction.CDCL.Core
                   Satisfaction.CDCL.Monad
                   Satisfaction.CDCL.Simplify
                   Satisfaction.CDCL.Solver
                   Satisfaction.CDCL.Statistics
                   Satisfaction.CDCL.UnitPropagation
                   Satisfaction.Internal.Debug
                   Control.Monad.Prim
                   Data.Array.Dynamic
                   Data.Array.Heap
                   Data.Array.Prim
                   Data.Array.Prim.Internal
                   Data.Array.Prim.Generic
                   Data.Array.Prim.Mutable
                   Data.Array.Prim.Unboxed
                   Data.Array.Prim.Unboxed.Internal
                   Data.Array.Prim.Unboxed.Mutable
                   Data.Array.Traverse
                   Data.Array.Vector
                   Data.Ref.Prim
                   Data.Ix.Zero
                   Data.Unbox
  build-depends: base >= 4.6 && < 5,
                 containers >= 0.5 && < 0.6
  hs-source-dirs: src
  if flag(trace)
    hs-source-dirs: src/trace/enable
  else
    hs-source-dirs: src/trace/disable

  default-language: Haskell2010
  ghc-options: -Wall -O
  ghc-prof-options: -auto-all

test-suite satisfaction-tests
  type: exitcode-stdio-1.0
  default-language: Haskell2010
  main-is: satisfaction-tests.hs
  hs-source-dirs: tests
  ghc-options: -Wall -rtsopts
  build-depends: satisfaction-core,
                 base,
                 array,
                 transformers,
                 filemanip >= 0.3.5 && < 0.4,
                 parse-dimacs >= 1.3 && < 2,
                 tasty >= 0.10 && < 0.12,
                 tasty-hunit >= 0.9 && < 0.10,
                 tasty-quickcheck >= 0.8 && < 0.9,
                 QuickCheck

benchmark satisfaction-bench
  type: exitcode-stdio-1.0
  default-language: Haskell2010
  hs-source-dirs: bench
  main-is: satisfaction-bench.hs
  ghc-options: -Wall -O
  build-depends: satisfaction-core,
                 base,
                 deepseq,
                 array >= 0.4 && < 0.6,
                 vector >= 0.10 && < 0.12,
                 criterion >= 1 && < 1.2
